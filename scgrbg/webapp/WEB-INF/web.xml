<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">

	<display-name>aisino</display-name>
	<distributable/>
	<!-- <context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:spring/*.xml classpath:org/codehaus/xfire/spring/xfire.xml</param-value>
	</context-param> -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:spring/*.xml</param-value>
	</context-param>
	<listener>
		<display-name>StartListener</display-name>
		<listener-class>com.aisino.platform.veng.servlet.ResourceLoadListener</listener-class>
	</listener>
    <session-config>
        <session-timeout>60</session-timeout>
    </session-config>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>
	<error-page>
	    <error-code>404</error-code>
	    <location>/error.html</location>	    
	</error-page>
	<mime-mapping>  
	   <extension>doc</extension>     
	   <mime-type>application/msword</mime-type>     
	</mime-mapping>     
	<mime-mapping>     
	   <extension>xls</extension>     
	   <mime-type>application/vnd.ms-excel</mime-type>     
	</mime-mapping>     
	<mime-mapping>     
	   <extension>ppt</extension>     
	   <mime-type>application/vnd.ms-powerpoint</mime-type>     
	</mime-mapping>
	<servlet>
		<description>Apache CXF Endpoint</description>
		<display-name>cxf</display-name>
		<servlet-name>cxf</servlet-name>
		<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>cxf</servlet-name>
		<url-pattern>/services/*</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>xfire</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	</servlet>  
	 <servlet>
       <servlet-name>RegServiceServlet</servlet-name>
       <servlet-class> cn.com.huadi.aos.hdoa.common.servlet.RegServiceServlet</servlet-class>
       <load-on-startup>1</load-on-startup>
   </servlet>
	<servlet-mapping>
		<servlet-name>xfire</servlet-name>
		<url-pattern>*.ws</url-pattern>
	</servlet-mapping>
	
		
		<!-- =======CAS filter Client for this web application=========== -->
    <!-- 用于单点退出，该过滤器监听实现单点登出功能，可选配置-->  
    <listener>  
        <listener-class>  
            org.jasig.cas.client.session.SingleSignOutHttpSessionListener   
        </listener-class>  
    </listener>  
  
    <!-- 该过滤器用于实现单点登出功能，可选配置。-->    
    <filter>  
        <filter-name>CAS Single Sign Out Filter</filter-name>  
        <filter-class>  
        cn.com.huadi.aos.hdoa.common.filter.SingleSignOutFilter
        </filter-class>  
    </filter>  
    <filter-mapping>  
        <filter-name>CAS Single Sign Out Filter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping> 
  
    <!-- 该过滤器负责用户的认证工作，必须启用它 -->  
    <filter>  
        <filter-name>CASFilter</filter-name>  
        <filter-class>  
            org.jasig.cas.client.authentication.AuthenticationFilter   
        </filter-class>  
        <init-param>  
            <param-name>casServerLoginUrl</param-name>  
            <param-value>  
                http://192.168.58.114:80/sso/login   
            </param-value>  
                  </init-param>  
        <init-param>  
  <!--这里的server是客户端的IP-->              <param-name>serverName</param-name>  
            <param-value>http://192.168.58.24:8080</param-value>  
        </init-param>  
    </filter>  
    <filter-mapping>  
        <filter-name>CASFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>  
  
    <!-- 该过滤器负责对Ticket的校验工作，必须启用它 -->  
    <filter>  
        <filter-name>CAS Validation Filter</filter-name>  
        <filter-class>  
            org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter   
        </filter-class>
         <init-param>  
            <param-name>casServerUrlPrefix</param-name>  
            <param-value>http://192.168.58.114:80/sso</param-value>  
        </init-param>  
        <init-param>  
            <param-name>serverName</param-name>  
            <param-value>http://192.168.58.24:8080</param-value>  
        </init-param>    
    </filter>  
    <filter-mapping>  
        <filter-name>CAS Validation Filter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>  
  
    <!--   
        该过滤器负责实现HttpServletRequest请求的包裹，   
        比如允许开发者通过HttpServletRequest的getRemoteUser()方法获得SSO登录用户的登录名，可选配置。   
    -->  
    <filter>  
        <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>  
        <filter-class>  
            org.jasig.cas.client.util.HttpServletRequestWrapperFilter   
        </filter-class>  
    </filter>  
    <filter-mapping>  
        <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>  
<!-- =============================================== -->
	
 <filter>
		<filter-name>Session Timeout Filter</filter-name>
		<filter-class>
			cn.com.huadi.aos.hdoa.common.filter.SessionTimeoutFilter
		</filter-class>
		<init-param>
			<param-name>redirectURL</param-name>
			<param-value>/pt/res/hdoa/sessionCheck.jsp</param-value>
		</init-param>
		<init-param>
			<param-name>exceptFiles</param-name>
			<param-value>
				/pt/res/hdoa/ssologin.jsp#/canvas?formid=login#/pt/res/hdoa/sessionCheck.jsp#/pt/res/hdoa/duchalogin.jsp#/canvas?formid=pt_reload#/services/#/ptfile#/pt/res/hdoa/wpsedit/upload.jsp#/pt/res/hdoa/wpsedit/upload2.jsp#/pt/res/hdoa/wpsedit/ShowDzwj.jsp#/pt/res/hdoa/wpsedit/#/pt/res/hdoa/ssologin.jsp#/pt/res/hdoa/wpsedit/#/pt/res/hdoa/foxit/</param-value>
		</init-param>
		<init-param>
			<param-name>exceptFileTypes</param-name>
			<param-value>
			   .css#.js#.style#.jscript#.jpg#.png#.gif#.wpt</param-value>
		</init-param>
		<init-param>
			<param-name>enable</param-name>
			<param-value>true</param-value>
		</init-param>	
	</filter>
	<filter-mapping>
		<filter-name>Session Timeout Filter
		</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
</web-app>
